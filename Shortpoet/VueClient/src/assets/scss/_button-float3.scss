.button-float {
  cursor: pointer;
  z-index: 1000;
  position: fixed;
  right: 9rem;
  bottom: 3rem;
  // using percect here seemed to be a problem for the css compiler regex i think
  opacity: .5;
  font-size: 1.5rem;  
  .button-float-icon-circle {
    color: $gray-500;
  }
  .button-float-icon-layer {
  }
  .button-float-icon {
    color: $white;
  }
}
.button-float-container {
  width: 30rem;
  height: 30rem;
  position: fixed;
  z-index: 1000;
  left: 20rem;
  bottom: 0rem;
  // must be set to visible inititally so we have access to div on load then we set to hidden immediately 
  // on load with data property in component
  visibility: visible;
  transition: visibility 0.3s cubic-bezier(0.42, 0, 0.58, 1);
}

.icon-container {
  display: flex;
  opacity: .5;
  justify-content: center;
  align-items: center;
  width: 3rem;
  height: 3rem;
  background-color: $olive-green;
  position: absolute;
  left: 50%;
  top: 50%;
  cursor: pointer;
  // transform: translate(-50%, -50%);
  border-radius: 50%;
  visibility: visible;
  z-index: 100001;
  box-shadow:
    0 2px 2px 0 rgba(0,0,0,0.14), 0 1px 5px 0 rgba(0,0,0,0.12), 0 3px 1px -2px rgba(0,0,0,0.2);
  .button-float-icon-layer {
    flex: 1;
    .button-float-icon-circle {
      color: $forest-green;
    }
    .button-float-icon {
      flex: 1;
      color: $white;
    }
  }
}

.icon-halo-hide {
  position: absolute;
  color: $white;
  left: 50%;
  top: 50%;
  width: 6rem;
  height: 6rem;
  border-radius: 50%;
  &:before {
      content: ' ';
      background-color: #fff;
      border-radius: 50%;
      position: absolute;
      width: 100%;
      height: 100%;
      opacity: 0;
      transition:
        transform 0.3s cubic-bezier(0.42, 0, 0.58, 1),opacity 0.3s cubic-bezier(0.42, 0, 0.58, 1),-webkit-transform 0.3s cubic-bezier(0.42, 0, 0.58, 1);
        transform: scale(0);
  }
}
.icon-halo-show {
  position: absolute;
  color: $white;
  left: 50%;
  top: 50%;
  width: 6rem;
  height: 6rem;
  border-radius: 50%;
  z-index: 100001;
  &:before {
      content: ' ';
      background-color: #fff;
      border-radius: 50%;
      position: absolute;
      width: 100%;
      height: 100%;
      opacity: 1;
      transition:
        transform 0.3s cubic-bezier(0.42, 0, 0.58, 1),opacity 0.3s cubic-bezier(0.42, 0, 0.58, 1),-webkit-transform 0.3s cubic-bezier(0.42, 0, 0.58, 1);
        transform: scale(1);
  }
}

.halo-mask-show {
  display: flex;
  background-color: $forest-green;
  border-radius: 50%;
  opacity: .95;
  transition:
      transform 0.3s cubic-bezier(0.42, 0, 0.58, 1),opacity 0.3s cubic-bezier(0.42, 0, 0.58, 1),-webkit-transform 0.3s cubic-bezier(0.42, 0, 0.58, 1);
  transform: scale(1);
  position: absolute;
  width: 100%;
  height: 100%;
  z-index: 100000;
}

.halo-mask-hide {
  display: flex;
  align-items: center;
  // background-color: $forest-green;
  // setting color as hex makes it evaluate to rgb if no transparency is set
  // otherwise rgba which is why just changing the background-color 
  // alters the way the component visibility is toggled by the different classes
  // https://stackoverflow.com/questions/5770341/i-do-not-want-to-inherit-the-child-opacity-from-the-parent-in-css
  background-color: #0B6623;
  border-radius: 50%;
  opacity: 1;
  transition:
      transform 0.3s cubic-bezier(0.42, 0, 0.58, 1),opacity 0.3s cubic-bezier(0.42, 0, 0.58, 1),-webkit-transform 0.3s cubic-bezier(0.42, 0, 0.58, 1);
  transform: scale(1);
  position: absolute;
  width: 100%;
  height: 100%;
  z-index: 100000;
}

.halo-content {
  // width: 456px;
  // height: 600px;
  // right: 56px;
  // bottom: 56px;
  // padding: 56px;
  // position: fixed;
  // left: 0;
  // color: #fff; 
}

.mobile {
  font-size: 1rem;
  right: 2rem;
  bottom: 2rem;
}
