.ripple-container {
  position: fixed;
  bottom: -8em;
  right: -8em;
  height: 24em;
  width: 24em;
  .icon-halo {
    width: 6em;
    height: 6em;
    z-index: 10000;
    position: absolute;
    bottom: 9em;
    right: 9em;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    .icon-circle {
      background-color: $forest-green;
      position: absolute;
      // bottom: 1.2em;
      // right: 1.2em;

      width: 3.5em;
      height: 3.5em;
      z-index: 1000000;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      border-radius: 50%;
      box-shadow: 0 2px 2px 0 rgba(0,0,0,0.14), 0 1px 5px 0 rgba(0,0,0,0.12), 0 3px 1px -2px rgba(0,0,0,0.2);
      .button-float-icon {
        color: $white;
        z-index: 10000001
      }
    }
  }
  .icon-halo-show {
    background-color: rgba(255, 255, 255, 1);
  }
  .icon-halo-hide {
    background-color: rgba(255, 255, 255, 0);
  }
}

.ripple-mask {
  position: absolute;
  // bottom: -6em;
  // right: -6em;
  // background-color: $forest-green;
  // setting color as hex makes it evaluate to rgb if no transparency is set
  // otherwise rgba which is why just changing the background-color
  // alters the way the component visibility is toggled by the different classes
  // https://stackoverflow.com/questions/5770341/i-do-not-want-to-inherit-the-child-opacity-from-the-parent-in-css
  border-radius: 50%;
  transition:
      transform 0.3s cubic-bezier(0.42, 0, 0.58, 1),opacity 0.3s cubic-bezier(0.42, 0, 0.58, 1),-webkit-transform 0.3s cubic-bezier(0.42, 0, 0.58, 1);
  transform: scale(1);
  width: 100%;
  height: 100%;
  z-index: 1000;
  -webkit-transition:
    background-color .3s ease-out,
    transform .3s cubic-bezier(0.455, 0.03, 0.515, 0.955),
    width .3s cubic-bezier(0.455, 0.03, 0.515, 0.955),
    height .3s cubic-bezier(0.455, 0.03, 0.515, 0.955),
    ;
  -moz-transition:
    background-color .3s ease-out,
    transform .3s cubic-bezier(0.455, 0.03, 0.515, 0.955),
    width .3s cubic-bezier(0.455, 0.03, 0.515, 0.955),
    height .3s cubic-bezier(0.455, 0.03, 0.515, 0.955),
    ;
  -o-transition:
    background-color .3s ease-out,
    transform .3s cubic-bezier(0.455, 0.03, 0.515, 0.955),
    width .3s cubic-bezier(0.455, 0.03, 0.515, 0.955),
    height .3s cubic-bezier(0.455, 0.03, 0.515, 0.955),
    ;
  transition:
    background-color .3s ease-out,
    transform .3s cubic-bezier(0.455, 0.03, 0.515, 0.955),
    width .3s cubic-bezier(0.455, 0.03, 0.515, 0.955),
    height .3s cubic-bezier(0.455, 0.03, 0.515, 0.955),
    ;
  &:before {
    content: ' ';
    background-color: rgba(11, 102, 35, 1);
    border-radius: 50%;
    position: absolute;
    width: 100%;
    height: 100%;
    opacity: 1;
    transition:
      transform 0.3s cubic-bezier(0.42, 0, 0.58, 1),opacity 0.3s cubic-bezier(0.42, 0, 0.58, 1),-webkit-transform 0.3s cubic-bezier(0.42, 0, 0.58, 1);
      transform: scale(0);
  }
  // transition: transform, height, width, 500ms ease;
  // transition: transform, height, width, 0.3s cubic-bezier(0.42, 0, 0.58, 1),opacity 0.3s cubic-bezier(0.42, 0, 0.58, 1),-webkit-transform 0.3s cubic-bezier(0.42, 0, 0.58, 1);
  // transition-property: scale;


}
.ripple-mask-show {
  position: absolute;
  // toggling 0 or 1 on the opacity for th eshow and hide classes' main and pseudo elements acheives different FX
  // also depends on size
  //
  background-color: rgba(11, 102, 35, 1);
  transform: scale(1);
  &:before {
    content: ' ';
    background-color: rgba(11, 102, 35, 0);
    // background-color: rgba(204, 20, 20, 1);
    border-radius: 50%;
    position: absolute;
    width: 100%;
    height: 100%;
    opacity: 0;
    transition:
      transform 0.3s cubic-bezier(0.42, 0, 0.58, 1),opacity 0.3s cubic-bezier(0.42, 0, 0.58, 1),-webkit-transform 0.3s cubic-bezier(0.42, 0, 0.58, 1);
    transform: scale(1);
  }
}
.ripple-mask-hide {
  // position: absolute;
  // background-color: rgba(11, 102, 35, 1);
  background-color: rgba(110, 102, 35, 0);
  position: absolute;
  // bottom: -6em;
  // right: -6em;

  // flex: 0;
  transform: scale(0);
  width: 100%;
  height: 100%;
&:before {
    content: '';
    background-color: rgba(11, 102, 35, 0);
    // background-color: rgba(204, 20, 20, 1);
    border-radius: 50%;
    position: absolute;
    // setting bottom and right to 0  bec it seems that it is relative to parent
    bottom: 0em;
    right: 0em;
    width: 100%;
    height: 100%;
      // opacity: 1;
    // z-index: 1000;
    transition:
      transform 0.3s cubic-bezier(0.42, 0, 0.58, 1),opacity 0.3s cubic-bezier(0.42, 0, 0.58, 1),-webkit-transform 0.3s cubic-bezier(0.42, 0, 0.58, 1);
    transform: scale(0);
  }
}

